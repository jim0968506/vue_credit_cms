{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { doLogin } from \"@/apis/user\";\nexport default {\n  data() {\n    return {\n      ruleForm: {\n        username: \"\",\n        pass: \"\"\n      },\n      rules: {\n        pass: [{\n          required: true,\n          trigger: \"blur\",\n          validator: this.validatePass\n        }],\n        username: [{\n          required: true,\n          trigger: \"blur\",\n          message: \"請輸入帳號\"\n        }]\n      }\n    };\n  },\n  methods: {\n    validatePass(rule, value, callback) {\n      if (value === \"\") {\n        callback(new Error(\"請輸入密碼\"));\n      } else if (value.length < 6) {\n        callback(new Error(\"密碼不能小於6位數\"));\n      } else {\n        callback();\n      }\n    },\n    submitForm() {\n      this.$refs.ruleForm.validate(valid => {\n        if (valid) {\n          // 如果驗證通過，\n          //呼叫login方法，傳入登入資訊，下面會定義\n          this.login(this.ruleForm);\n        } else {\n          return false;\n        }\n      });\n    },\n    submitForm() {\n      //驗證\n      this.$refs.ruleForm.validate(valid => {\n        if (valid) {\n          this.login(this.ruleForm);\n        } else {\n          return false;\n        }\n      });\n    },\n    async login(form) {\n      const res = await doLogin(form);\n      if (res.data.code === 20000) {\n        if (res?.data?.data?.token) {\n          localStorage.setItem('token', res?.data?.data?.token);\n          await this.$store.dispatch('getMenuList');\n          // 跳轉到首頁前把成功登入的使用者名稱儲存\n          this.$store.commit(\"NAMEUPDATE\", this.ruleForm.username);\n          this.$router.push(\"/home\");\n        }\n      } else {\n        this.$message.error('登入失敗!!!');\n      }\n    }\n  }\n};","map":{"version":3,"names":["doLogin","data","ruleForm","username","pass","rules","required","trigger","validator","validatePass","message","methods","rule","value","callback","Error","length","submitForm","$refs","validate","valid","login","form","res","code","token","localStorage","setItem","$store","dispatch","commit","$router","push","$message","error"],"sources":["src/views/LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-box\">\r\n    <div class=\"login-input-box\">\r\n      <h1>信貸後臺管理系統</h1>\r\n      <el-form :model=\"ruleForm\" :rules=\"rules\" status-icon ref=\"ruleForm\" class=\"demo-ruleForm\">\r\n\r\n        <el-form-item prop=\"username\">\r\n          <el-input prefix-icon=\"el-icon-user-solid\" v-model=\"ruleForm.username\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item prop=\"pass\">\r\n          <el-input prefix-icon=\"el-icon-s-order\" type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-button type=\"primary\" @click=\"submitForm\">提交</el-button>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { doLogin } from \"@/apis/user\"\r\nexport default {\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        username: \"\",\r\n        pass: \"\"\r\n      },\r\n      rules: {\r\n        pass: [{ required: true, trigger: \"blur\", validator: this.validatePass, }],\r\n        username: [{ required: true, trigger: \"blur\", message: \"請輸入帳號\" }]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    validatePass(rule, value, callback) {\r\n      if (value === \"\") {\r\n        callback(new Error(\"請輸入密碼\"));\r\n      } else if (value.length < 6) {\r\n        callback(new Error(\"密碼不能小於6位數\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    },\r\n    submitForm() {\r\n      this.$refs.ruleForm.validate(valid => {\r\n        if (valid) {\r\n          // 如果驗證通過，\r\n          //呼叫login方法，傳入登入資訊，下面會定義\r\n          this.login(this.ruleForm)\r\n        } else {\r\n\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    submitForm() {\r\n      //驗證\r\n      this.$refs.ruleForm.validate(valid => {\r\n        if (valid) {\r\n          this.login(this.ruleForm)\r\n        } else {\r\n\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    async login(form) {\r\n      const res = await doLogin(form)\r\n      if (res.data.code === 20000) {\r\n        if (res?.data?.data?.token) {\r\n          localStorage.setItem('token', res?.data?.data?.token)\r\n          await this.$store.dispatch('getMenuList')\r\n          // 跳轉到首頁前把成功登入的使用者名稱儲存\r\n          this.$store.commit(\"NAMEUPDATE\", this.ruleForm.username)\r\n\r\n          this.$router.push(\"/home\");\r\n        }\r\n\r\n      } else {\r\n        this.$message.error('登入失敗!!!');\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.login-input-box {\r\n  width: 650px;\r\n  height: 320px;\r\n  background: #fff;\r\n  text-align: center;\r\n  padding: 40px 40px 12px 12px;\r\n}\r\n\r\n.login-box {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background: url(../assets/bg2.jpg);\r\n  background-size: cover;\r\n}\r\n\r\n.el-button {\r\n  width: 600px;\r\n}\r\n\r\n.el-input {\r\n  width: 600px;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n::v-deep .el-input__inner {\r\n  background: #e5e5e5;\r\n}\r\n</style>\r\n"],"mappings":";AAsBA,SAAAA,OAAA;AACA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,QAAA;QACAC,IAAA;MACA;MACAC,KAAA;QACAD,IAAA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,SAAA,OAAAC;QAAA;QACAN,QAAA;UAAAG,QAAA;UAAAC,OAAA;UAAAG,OAAA;QAAA;MACA;IACA;EACA;EACAC,OAAA;IACAF,aAAAG,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,CAAAG,MAAA;QACAF,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACAG,WAAA;MACA,KAAAC,KAAA,CAAAhB,QAAA,CAAAiB,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA;UACA,KAAAC,KAAA,MAAAnB,QAAA;QACA;UAEA;QACA;MACA;IACA;IACAe,WAAA;MACA;MACA,KAAAC,KAAA,CAAAhB,QAAA,CAAAiB,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAC,KAAA,MAAAnB,QAAA;QACA;UAEA;QACA;MACA;IACA;IACA,MAAAmB,MAAAC,IAAA;MACA,MAAAC,GAAA,SAAAvB,OAAA,CAAAsB,IAAA;MACA,IAAAC,GAAA,CAAAtB,IAAA,CAAAuB,IAAA;QACA,IAAAD,GAAA,EAAAtB,IAAA,EAAAA,IAAA,EAAAwB,KAAA;UACAC,YAAA,CAAAC,OAAA,UAAAJ,GAAA,EAAAtB,IAAA,EAAAA,IAAA,EAAAwB,KAAA;UACA,WAAAG,MAAA,CAAAC,QAAA;UACA;UACA,KAAAD,MAAA,CAAAE,MAAA,oBAAA5B,QAAA,CAAAC,QAAA;UAEA,KAAA4B,OAAA,CAAAC,IAAA;QACA;MAEA;QACA,KAAAC,QAAA,CAAAC,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}