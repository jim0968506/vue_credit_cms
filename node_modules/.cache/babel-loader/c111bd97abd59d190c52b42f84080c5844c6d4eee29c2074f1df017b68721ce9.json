{"ast":null,"code":"import { getLoanList, updateLoan, deleteLoan, submitApprove } from '@/apis/loan.js';\nexport default {\n  filters: {\n    statusColor(status) {\n      switch (status) {\n        case 0:\n          return 'success';\n          break;\n        case 1:\n          return '';\n          break;\n        case 2:\n          return 'success';\n          break;\n        case 3:\n          return 'danger';\n          break;\n        case 4:\n          return 'warning';\n          break;\n        case 5:\n          return 'success';\n          break;\n        case 6:\n          return 'danger';\n          break;\n        case 7:\n          return 'success';\n          break;\n        default:\n          return 'danger';\n      }\n    },\n    status(status) {\n      switch (status) {\n        case 0:\n          return '進件';\n          break;\n        case 1:\n          return '提交初審';\n          break;\n        case 2:\n          return '初審通過';\n          break;\n        case 3:\n          return '初審拒絕';\n          break;\n        case 4:\n          return '提交終審';\n          break;\n        case 5:\n          return '終審通過';\n          break;\n        case 6:\n          return '終審拒絕';\n          break;\n        case 7:\n          return '生成合同';\n          break;\n        default:\n          return '出錯了';\n      }\n    }\n  },\n  data() {\n    return {\n      updateForm: {\n        name: '',\n        sex: '',\n        id: 0\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '必須填寫使用者名稱'\n        }],\n        sex: [{\n          required: true,\n          message: '必須填寫性別'\n        }]\n      },\n      dialogVisible: false,\n      query: '',\n      tableData: [],\n      pageOptions: {\n        pageNo: 1,\n        pageSize: 10\n      },\n      rows: 0,\n      columns: [{\n        label: \"姓名\",\n        prop: \"name\",\n        width: \"80\"\n      }, {\n        label: \"出生日期\",\n        prop: \"birthday\",\n        width: \"140\"\n      }, {\n        label: \"性別\",\n        prop: \"sex\",\n        width: \"50\"\n      }, {\n        label: \"教育程度\",\n        prop: \"education\",\n        width: \"80\"\n      }, {\n        label: \"居住地址\",\n        prop: \"address1\"\n      }, {\n        label: \"手機號\",\n        prop: \"mobile_phone\"\n      }, {\n        label: \"申請狀態\",\n        prop: \"status\",\n        width: \"90\"\n      }, {\n        label: \"操作\",\n        width: \"280\",\n        prop: \"opts\"\n      }]\n    };\n  },\n  methods: {\n    async setQueryName() {},\n    async getLoanList() {\n      let res = await getLoanList(this.pageOptions);\n      if (res.data.code === 20000) {\n        //對資料格式化\n        this.tableData = res.data.data.data.data.map(item => {\n          item.birthday = this.getBirthday(item.birthday);\n          item.sex = this.getSex(item.sex);\n          item.education = this.getEducation(item.education);\n          return item;\n        });\n        this.rows = res.data.data.rows;\n      }\n    },\n    getBirthday(date) {\n      let dateNow = new Date(date);\n      function convert(data) {\n        return data < 10 ? \"0\" + data : data;\n      }\n      let year = dateNow.getFullYear();\n      let month = convert(dateNow.getMonth());\n      let day = convert(dateNow.getDate());\n      let hours = convert(dateNow.getHours());\n      let minutes = convert(dateNow.getMinutes());\n      let seconds = convert(dateNow.getSeconds());\n      let dateStr = year + \"-\" + month + \"-\" + day + \" \" + hours + \":\" + minutes + \":\" + seconds;\n      return dateStr;\n    },\n    getSex(str) {\n      return str === \"man\" ? \"男\" : \"女\";\n    },\n    getEducation(str) {\n      return str === \"college\" ? \"大學\" : \"高中\";\n    },\n    showEdit(row) {\n      this.updateForm.id = row.id;\n      this.updateForm.name = row.name;\n      this.updateForm.sex = row.sex;\n      this.dialogVisible = true;\n    },\n    async delLoan(id) {\n      let res = await deleteLoan(id);\n      //20000代表成功，成功後重新獲取資料 \n      if (res.data.code === 20000) {\n        this.getLoanList();\n      }\n    },\n    async submit(id) {\n      let res = await submitApprove(id);\n      //20000代表成功，成功後重新獲取資料 \n      if (res.data.code === 20000) {\n        this.getLoanList();\n      }\n    },\n    async submitUpdate() {\n      let res = await updateLoan(this.updateForm);\n      if (res.data.code === 20000) {\n        this.cleanFrom();\n        this.dialogVisible = false;\n        this.getLoanList();\n      }\n    },\n    cleanFrom() {\n      this.$refs[\"updateForm\"].resetFields();\n    },\n    handleCurrentChange(pageNo) {\n      this.pageOptions.pageNo = pageNo;\n      this.getLoanList();\n    },\n    updateSize(pageSize) {\n      this.pageOptions.pageSize = pageSize;\n      this.getLoanList();\n    },\n    async setQueryName() {\n      this.pageOptions.name = this.query;\n      await this.getLoanList();\n      this.pageOptions.name = null;\n    }\n  },\n  mounted() {\n    this.getLoanList();\n  }\n};","map":{"version":3,"names":["getLoanList","updateLoan","deleteLoan","submitApprove","filters","statusColor","status","data","updateForm","name","sex","id","rules","required","message","dialogVisible","query","tableData","pageOptions","pageNo","pageSize","rows","columns","label","prop","width","methods","setQueryName","res","code","map","item","birthday","getBirthday","getSex","education","getEducation","date","dateNow","Date","convert","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","dateStr","str","showEdit","row","delLoan","submit","submitUpdate","cleanFrom","$refs","resetFields","handleCurrentChange","updateSize","mounted"],"sources":["src/views/application-manage/index.vue"],"sourcesContent":["<template>\r\n    <div id=\"application-manage\">\r\n\r\n        <el-row>\r\n            <el-col :span=\"22\">\r\n                <!--這個屬性接收名稱，下面統一定義 -->\r\n                <el-input placeholder=\"請輸入名稱\" type=\"text\" v-model=\"query\"></el-input>\r\n            </el-col>\r\n            <el-col :span=\"2\">\r\n                <!-- 按鈕事件也是下面統一定義 -->\r\n                <el-button type=\"primary\" @click=\"setQueryName\">搜尋</el-button>\r\n            </el-col>\r\n        </el-row>\r\n        <!--tableData是表格資料-->\r\n        <el-table :data=\"tableData\" id=\"gbox\" :useIndex=\"true\" :stripe=\"true\" :border=\"true\" :fit=\"true\"\r\n            :useMultiSelect=\"false\">\r\n            <!--第一列序號-->\r\n            <el-table-column type=\"index\" label=\"序號\" width=\"55\" align=\"center\">\r\n            </el-table-column>\r\n            <el-table-column v-for=\"(col, index) in columns\" :key=\"index\" :label=\"col.label\" :prop=\"col.prop\"\r\n                :width=\"col.width\">\r\n                <!-- 預設插槽  column是所有列資訊，row是當前行資訊-->\r\n                <template v-slot=\"{ column, row }\">\r\n                    <!-- 如果列的prop的值為status-->\r\n                    <div v-if=\"column.property === 'status'\">\r\n                        <!-- 使用兩個過濾器來格式化方法，因為後端返回的申請狀態是0到7 -->\r\n                        <el-tag :type=\"row[column.property] | statusColor\">{{ row[column.property] | status }}\r\n                        </el-tag>\r\n                    </div>\r\n                    <!--如果是操作列新增三個按鈕-->\r\n                    <div v-else-if=\"column.property === 'opts'\">\r\n                        <el-button :disabled=\"[0, 2, 3, 6].indexOf(row['status']) === -1\" @click=\"showEdit(row)\"\r\n                            type=\"primary\">編輯</el-button>\r\n                        <el-button @click=\"delLoan(row.id)\" type=\"danger\">刪除</el-button>\r\n                        <el-button :disabled=\"[0, 2, 3, 6].indexOf(row['status']) === -1\" @click=\"submit(row.id)\"\r\n                            type=\"success\">提交審核</el-button>\r\n                    </div>\r\n\r\n                    <div v-else>\r\n                        {{ row[column.property] }}\r\n                    </div>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <el-pagination @current-change=\"handleCurrentChange\" @size-change=\"updateSize\" :page-sizes=\"[10, 20, 30, 40]\"\r\n            :page-size=\"pageOptions.pageSize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"rows\">\r\n        </el-pagination>\r\n        <!--dialogVisible變數控制對話方塊是否顯示-->\r\n        <el-dialog title=\"申請管理-編輯\" :visible=\"dialogVisible\" @close=\"dialogVisible = false\" width=\"30%\">\r\n            <div class=\"form-box\">\r\n                <el-form ref=\"updateForm\" :model=\"updateForm\" :rules=\"rules\" label-width=\"80px\">\r\n                    <el-row>\r\n                        <el-col :xl=20 :lg=20 :md=12 :sm=24 :xs=24>\r\n                            <el-form-item label=\"姓名\" prop=\"name\">\r\n                                <el-input type='input' v-model=\"updateForm.name\"></el-input>\r\n                            </el-form-item>\r\n                        </el-col>\r\n                        <el-col :xl=20 :lg=20 :md=12 :sm=24 :xs=24>\r\n                            <el-form-item label=\"性別\" prop=\"sex\">\r\n                                <el-select v-model=\"updateForm.sex\">\r\n                                    <el-option key=\"man\" label=\"男\" value=\"man\">\r\n                                    </el-option>\r\n                                    <el-option key=\"woman\" label=\"女\" value=\"woman\">\r\n                                    </el-option>\r\n                                </el-select>\r\n                            </el-form-item>\r\n                        </el-col>\r\n                    </el-row>\r\n                </el-form>\r\n\r\n                <div class=\"btns clear-fix\">\r\n                    <div>\r\n                        <el-button type=\"primary\" @click=\"submitUpdate\">提交</el-button>\r\n                        <el-button @click=\"cleanFrom\">重置</el-button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </el-dialog>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { getLoanList, updateLoan, deleteLoan, submitApprove } from '@/apis/loan.js'\r\nexport default {\r\n    filters: {\r\n        statusColor(status) {\r\n            switch (status) {\r\n                case 0:\r\n                    return 'success'\r\n                    break\r\n                case 1:\r\n                    return ''\r\n                    break\r\n                case 2:\r\n                    return 'success'\r\n                    break\r\n                case 3:\r\n                    return 'danger'\r\n                    break\r\n                case 4:\r\n                    return 'warning'\r\n                    break\r\n                case 5:\r\n                    return 'success'\r\n                    break\r\n                case 6:\r\n                    return 'danger'\r\n                    break\r\n                case 7:\r\n                    return 'success'\r\n                    break\r\n                default:\r\n                    return 'danger'\r\n\r\n            }\r\n        },\r\n        status(status) {\r\n            switch (status) {\r\n                case 0:\r\n                    return '進件'\r\n                    break\r\n                case 1:\r\n                    return '提交初審'\r\n                    break\r\n                case 2:\r\n                    return '初審通過'\r\n                    break\r\n                case 3:\r\n                    return '初審拒絕'\r\n                    break\r\n                case 4:\r\n                    return '提交終審'\r\n                    break\r\n                case 5:\r\n                    return '終審通過'\r\n                    break\r\n                case 6:\r\n                    return '終審拒絕'\r\n                    break\r\n                case 7:\r\n                    return '生成合同'\r\n                    break\r\n                default:\r\n                    return '出錯了'\r\n            }\r\n        }\r\n\r\n    },\r\n    data() {\r\n        return {\r\n            updateForm: {\r\n                name: '',\r\n                sex: '',\r\n                id: 0\r\n            },\r\n            rules: {\r\n                name: [{ required: true, message: '必須填寫使用者名稱' }],\r\n                sex: [{ required: true, message: '必須填寫性別' }],\r\n            },\r\n            dialogVisible: false,\r\n            query: '',\r\n            tableData: [],\r\n            pageOptions: {\r\n                pageNo: 1,\r\n                pageSize: 10\r\n            },\r\n            rows: 0,\r\n            columns: [\r\n                {\r\n                    label: \"姓名\",\r\n                    prop: \"name\",\r\n                    width: \"80\",\r\n                },\r\n                {\r\n                    label: \"出生日期\",\r\n                    prop: \"birthday\",\r\n                    width: \"140\",\r\n                },\r\n                {\r\n                    label: \"性別\",\r\n                    prop: \"sex\",\r\n                    width: \"50\",\r\n                },\r\n                {\r\n                    label: \"教育程度\",\r\n                    prop: \"education\",\r\n                    width: \"80\",\r\n                },\r\n                {\r\n                    label: \"居住地址\",\r\n                    prop: \"address1\",\r\n                },\r\n                {\r\n                    label: \"手機號\",\r\n                    prop: \"mobile_phone\",\r\n                },\r\n                {\r\n                    label: \"申請狀態\",\r\n                    prop: \"status\",\r\n                    width: \"90\",\r\n                },\r\n                {\r\n                    label: \"操作\",\r\n                    width: \"280\",\r\n                    prop: \"opts\",\r\n                },\r\n            ],\r\n\r\n        }\r\n    },\r\n    methods: {\r\n        async setQueryName() {\r\n\r\n        },\r\n        async getLoanList() {\r\n            let res = await getLoanList(this.pageOptions)\r\n            if (res.data.code === 20000) {\r\n                //對資料格式化\r\n                this.tableData = res.data.data.data.data.map(item => {\r\n                    item.birthday = this.getBirthday(item.birthday);\r\n                    item.sex = this.getSex(item.sex);\r\n                    item.education = this.getEducation(item.education);\r\n                    return item;\r\n                })\r\n\r\n                this.rows = res.data.data.rows\r\n            }\r\n        },\r\n        getBirthday(date) {\r\n            let dateNow = new Date(date);\r\n            function convert(data) {\r\n                return data < 10 ? \"0\" + data : data;\r\n            }\r\n            let year = dateNow.getFullYear();\r\n            let month = convert(dateNow.getMonth());\r\n            let day = convert(dateNow.getDate());\r\n\r\n            let hours = convert(dateNow.getHours());\r\n            let minutes = convert(dateNow.getMinutes());\r\n            let seconds = convert(dateNow.getSeconds());\r\n            let dateStr =\r\n                year +\r\n                \"-\" +\r\n                month +\r\n                \"-\" +\r\n                day +\r\n                \" \" +\r\n                hours +\r\n                \":\" +\r\n                minutes +\r\n                \":\" +\r\n                seconds;\r\n            return dateStr;\r\n        },\r\n        getSex(str) {\r\n            return str === \"man\" ? \"男\" : \"女\";\r\n        },\r\n        getEducation(str) {\r\n            return str === \"college\" ? \"大學\" : \"高中\";\r\n        },\r\n        showEdit(row) {\r\n            this.updateForm.id = row.id\r\n            this.updateForm.name = row.name\r\n            this.updateForm.sex = row.sex\r\n            this.dialogVisible = true\r\n        },\r\n        async delLoan(id) {\r\n            let res = await deleteLoan(id)\r\n            //20000代表成功，成功後重新獲取資料 \r\n            if (res.data.code === 20000) {\r\n                this.getLoanList()\r\n            }\r\n        },\r\n        async submit(id) {\r\n            let res = await submitApprove(id)\r\n            //20000代表成功，成功後重新獲取資料 \r\n            if (res.data.code === 20000) {\r\n                this.getLoanList()\r\n            }\r\n        },\r\n        async submitUpdate() {\r\n            let res = await updateLoan(this.updateForm)\r\n            if (res.data.code === 20000) {\r\n                this.cleanFrom()\r\n                this.dialogVisible = false\r\n                this.getLoanList()\r\n            }\r\n        },\r\n        cleanFrom() {\r\n            this.$refs[\"updateForm\"].resetFields()\r\n        },\r\n        handleCurrentChange(pageNo) {\r\n            this.pageOptions.pageNo = pageNo\r\n            this.getLoanList()\r\n        },\r\n        updateSize(pageSize) {\r\n            this.pageOptions.pageSize = pageSize\r\n            this.getLoanList()\r\n        },\r\n        async setQueryName() {\r\n            this.pageOptions.name = this.query\r\n            await this.getLoanList()\r\n            this.pageOptions.name = null\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getLoanList()\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.el-select,\r\n.el-input {\r\n    width: 100%;\r\n}\r\n\r\n.btns {\r\n    text-align: center;\r\n}\r\n\r\n.box-card {\r\n    margin-bottom: 10px;\r\n\r\n    >div {\r\n        >div {\r\n            text-align: left;\r\n        }\r\n    }\r\n}\r\n\r\n.el-row {\r\n    margin-bottom: 10px;\r\n}\r\n\r\n::v-deep .el-table--scrollable-x .el-table__body-wrapper {\r\n    overflow-x: hidden;\r\n}\r\n\r\n.el-pagination {\r\n    padding-top: 10px;\r\n}\r\n</style>"],"mappings":"AAoFA,SAAAA,WAAA,EAAAC,UAAA,EAAAC,UAAA,EAAAC,aAAA;AACA;EACAC,OAAA;IACAC,YAAAC,MAAA;MACA,QAAAA,MAAA;QACA;UACA;UACA;QACA;UACA;UACA;QACA;UACA;UACA;QACA;UACA;UACA;QACA;UACA;UACA;QACA;UACA;UACA;QACA;UACA;UACA;QACA;UACA;UACA;QACA;UACA;MAEA;IACA;IACAA,aAAA;MACA,QAAAA,MAAA;QACA;UACA;UACA;QACA;UACA;UACA;QACA;UACA;UACA;QACA;UACA;UACA;QACA;UACA;UACA;QACA;UACA;UACA;QACA;UACA;UACA;QACA;UACA;UACA;QACA;UACA;MACA;IACA;EAEA;EACAC,KAAA;IACA;MACAC,UAAA;QACAC,IAAA;QACAC,GAAA;QACAC,EAAA;MACA;MACAC,KAAA;QACAH,IAAA;UAAAI,QAAA;UAAAC,OAAA;QAAA;QACAJ,GAAA;UAAAG,QAAA;UAAAC,OAAA;QAAA;MACA;MACAC,aAAA;MACAC,KAAA;MACAC,SAAA;MACAC,WAAA;QACAC,MAAA;QACAC,QAAA;MACA;MACAC,IAAA;MACAC,OAAA,GACA;QACAC,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAF,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAF,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAF,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAF,KAAA;QACAC,IAAA;MACA,GACA;QACAD,KAAA;QACAC,IAAA;MACA,GACA;QACAD,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAF,KAAA;QACAE,KAAA;QACAD,IAAA;MACA;IAGA;EACA;EACAE,OAAA;IACA,MAAAC,aAAA,GAEA;IACA,MAAA3B,YAAA;MACA,IAAA4B,GAAA,SAAA5B,WAAA,MAAAkB,WAAA;MACA,IAAAU,GAAA,CAAArB,IAAA,CAAAsB,IAAA;QACA;QACA,KAAAZ,SAAA,GAAAW,GAAA,CAAArB,IAAA,CAAAA,IAAA,CAAAA,IAAA,CAAAA,IAAA,CAAAuB,GAAA,CAAAC,IAAA;UACAA,IAAA,CAAAC,QAAA,QAAAC,WAAA,CAAAF,IAAA,CAAAC,QAAA;UACAD,IAAA,CAAArB,GAAA,QAAAwB,MAAA,CAAAH,IAAA,CAAArB,GAAA;UACAqB,IAAA,CAAAI,SAAA,QAAAC,YAAA,CAAAL,IAAA,CAAAI,SAAA;UACA,OAAAJ,IAAA;QACA;QAEA,KAAAV,IAAA,GAAAO,GAAA,CAAArB,IAAA,CAAAA,IAAA,CAAAc,IAAA;MACA;IACA;IACAY,YAAAI,IAAA;MACA,IAAAC,OAAA,OAAAC,IAAA,CAAAF,IAAA;MACA,SAAAG,QAAAjC,IAAA;QACA,OAAAA,IAAA,cAAAA,IAAA,GAAAA,IAAA;MACA;MACA,IAAAkC,IAAA,GAAAH,OAAA,CAAAI,WAAA;MACA,IAAAC,KAAA,GAAAH,OAAA,CAAAF,OAAA,CAAAM,QAAA;MACA,IAAAC,GAAA,GAAAL,OAAA,CAAAF,OAAA,CAAAQ,OAAA;MAEA,IAAAC,KAAA,GAAAP,OAAA,CAAAF,OAAA,CAAAU,QAAA;MACA,IAAAC,OAAA,GAAAT,OAAA,CAAAF,OAAA,CAAAY,UAAA;MACA,IAAAC,OAAA,GAAAX,OAAA,CAAAF,OAAA,CAAAc,UAAA;MACA,IAAAC,OAAA,GACAZ,IAAA,GACA,MACAE,KAAA,GACA,MACAE,GAAA,GACA,MACAE,KAAA,GACA,MACAE,OAAA,GACA,MACAE,OAAA;MACA,OAAAE,OAAA;IACA;IACAnB,OAAAoB,GAAA;MACA,OAAAA,GAAA;IACA;IACAlB,aAAAkB,GAAA;MACA,OAAAA,GAAA;IACA;IACAC,SAAAC,GAAA;MACA,KAAAhD,UAAA,CAAAG,EAAA,GAAA6C,GAAA,CAAA7C,EAAA;MACA,KAAAH,UAAA,CAAAC,IAAA,GAAA+C,GAAA,CAAA/C,IAAA;MACA,KAAAD,UAAA,CAAAE,GAAA,GAAA8C,GAAA,CAAA9C,GAAA;MACA,KAAAK,aAAA;IACA;IACA,MAAA0C,QAAA9C,EAAA;MACA,IAAAiB,GAAA,SAAA1B,UAAA,CAAAS,EAAA;MACA;MACA,IAAAiB,GAAA,CAAArB,IAAA,CAAAsB,IAAA;QACA,KAAA7B,WAAA;MACA;IACA;IACA,MAAA0D,OAAA/C,EAAA;MACA,IAAAiB,GAAA,SAAAzB,aAAA,CAAAQ,EAAA;MACA;MACA,IAAAiB,GAAA,CAAArB,IAAA,CAAAsB,IAAA;QACA,KAAA7B,WAAA;MACA;IACA;IACA,MAAA2D,aAAA;MACA,IAAA/B,GAAA,SAAA3B,UAAA,MAAAO,UAAA;MACA,IAAAoB,GAAA,CAAArB,IAAA,CAAAsB,IAAA;QACA,KAAA+B,SAAA;QACA,KAAA7C,aAAA;QACA,KAAAf,WAAA;MACA;IACA;IACA4D,UAAA;MACA,KAAAC,KAAA,eAAAC,WAAA;IACA;IACAC,oBAAA5C,MAAA;MACA,KAAAD,WAAA,CAAAC,MAAA,GAAAA,MAAA;MACA,KAAAnB,WAAA;IACA;IACAgE,WAAA5C,QAAA;MACA,KAAAF,WAAA,CAAAE,QAAA,GAAAA,QAAA;MACA,KAAApB,WAAA;IACA;IACA,MAAA2B,aAAA;MACA,KAAAT,WAAA,CAAAT,IAAA,QAAAO,KAAA;MACA,WAAAhB,WAAA;MACA,KAAAkB,WAAA,CAAAT,IAAA;IACA;EACA;EACAwD,QAAA;IACA,KAAAjE,WAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}